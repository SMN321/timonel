$ ./MAKE_TIMONEL.sh good-sub 11 1A80; ./flash-timonel-bootloader.sh good-sub 8; ./fuse_read.sh
**************************************************************************
* Starting Timonel compilation with these parameters:
* ---------------------------------------------------
* Binary file: good-sub.hex
* TWI address: 11
* Flash position: 1A80 <- use lower positions if make errors pop up below
**************************************************************************

===================================================================
| Building Timonel configuration: tml-t85-std
|------------------------------------------------------------------
| TIMONEL_START = 0x1A80 | TWI_ADDRESS = 11 | "good-sub.hex"
===================================================================
| ... ENABLE_LED_UI = true
| ... AUTO_TPL_CALC = true
| ... APP_USE_TPL_PG = false
| ... CMD_STPGADDR = false
| ... TWO_STEP_INIT = false
| ... USE_WDT_RESET = true
| ... CHECK_EMPTY_FL = false
| ... CMD_READFLASH = true
|------------------------------------------------------------------
| ... LED_UI_PIN = PB1
| ... CYCLESTOEXIT = 20
| ... SET_PRESCALER = true
| ... LOW_FUSE = 0x62
| ... FORCE_ERASE_PG = false
-------------------------------------------------------------------
[Sections]
   text    data     bss     dec     hex filename
   1396       2      93    1491     5d3 good-sub.bin

[Hexfile] Use the data size to calculate the bootloader address!
   text    data     bss     dec     hex filename
      0    1398       0    1398     576 good-sub.hex
-------------------------------------------------------------------

[[[ Flashing Timonel for operating @ 8 MHz ]]]


avrdude.exe: set SCK frequency to 32000 Hz
avrdude.exe: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude.exe: Device signature = 0x1e930b (probably t85)
avrdude.exe: NOTE: "flash" memory has been specified, an erase cycle will be performed
             To disable this feature, specify the -D option.
avrdude.exe: erasing chip
avrdude.exe: set SCK frequency to 32000 Hz
avrdude.exe: reading input file ".\releases\good-sub.hex"
avrdude.exe: writing flash (8180 bytes):

Writing | ################################################## | 100% 0.00s

avrdude.exe: 8180 bytes of flash written
avrdude.exe: verifying flash memory against .\releases\good-sub.hex:
avrdude.exe: load data flash data from input file .\releases\good-sub.hex:
avrdude.exe: input file .\releases\good-sub.hex contains 8180 bytes
avrdude.exe: reading on-chip flash data:

Reading | ################################################## | 100% 0.00s

avrdude.exe: verifying ...
avrdude.exe: 8180 bytes of flash verified
avrdude.exe: reading input file "0x62"
avrdude.exe: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude.exe: 1 bytes of lfuse written
avrdude.exe: verifying lfuse memory against 0x62:
avrdude.exe: load data lfuse data from input file 0x62:
avrdude.exe: input file 0x62 contains 1 bytes
avrdude.exe: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude.exe: verifying ...
avrdude.exe: 1 bytes of lfuse verified
avrdude.exe: reading input file "0xdd"
avrdude.exe: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude.exe: 1 bytes of hfuse written
avrdude.exe: verifying hfuse memory against 0xdd:
avrdude.exe: load data hfuse data from input file 0xdd:
avrdude.exe: input file 0xdd contains 1 bytes
avrdude.exe: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude.exe: verifying ...
avrdude.exe: 1 bytes of hfuse verified
avrdude.exe: reading input file "0xfe"
avrdude.exe: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude.exe: 1 bytes of efuse written
avrdude.exe: verifying efuse memory against 0xfe:
avrdude.exe: load data efuse data from input file 0xfe:
avrdude.exe: input file 0xfe contains 1 bytes
avrdude.exe: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude.exe: verifying ...
avrdude.exe: 1 bytes of efuse verified

avrdude.exe done.  Thank you.


*****************************
*                           *
* AVR microcontroller fuses *
* ========================= *
*                           *
*****************************

Low fuse = [0x62] <- OK for Timonel
.................................................
High fuse = [0xdd] <- OK for Timonel
.................................................
Extended fuse = [0xfe] <- OK for Timonel
.................................................